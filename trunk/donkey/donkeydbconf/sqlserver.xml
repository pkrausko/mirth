<?xml version="1.0" encoding="UTF-8"?>

<queries>
	<query id="createMessageTable">
		CREATE TABLE d_m${localChannelId} (
	        id BIGINT NOT NULL,
	        server_id NVARCHAR(36) NOT NULL,
	        received_date DATETIME NOT NULL DEFAULT GETDATE(),
	        processed BIT NOT NULL DEFAULT 0,
	        original_id BIGINT,
	        import_id BIGINT,
	        import_channel_id NVARCHAR(36),
	        CONSTRAINT m${localChannelId}_pkey PRIMARY KEY(id)
	    )
	</query>
	
	<query id="createMessageTableIndex1">
		CREATE INDEX d_m${localChannelId}_index1 ON d_m${localChannelId}(id, server_id)
	</query>
	
	<query id="createConnectorMessageTable">
		CREATE TABLE d_mm${localChannelId} (
	        id INTEGER NOT NULL,
	        message_id BIGINT NOT NULL,
	        server_id NVARCHAR(36) NOT NULL,
	        received_date DATETIME NOT NULL DEFAULT GETDATE(),
	        status CHAR(1) NOT NULL,
	        connector_name NVARCHAR(MAX),
	        send_attempts INTEGER DEFAULT 0 NOT NULL,
	        send_date DATETIME,
	        response_date DATETIME,
	        error_code INTEGER DEFAULT 0 NOT NULL,
	        chain_id INTEGER NOT NULL,
	        order_id INTEGER NOT NULL,
	        CONSTRAINT mm${localChannelId}_pkey PRIMARY KEY(message_id, id),
	        CONSTRAINT mm${localChannelId}_fkey FOREIGN KEY(message_id) REFERENCES d_m${localChannelId}(id) ON DELETE CASCADE
        )
	</query>
	
	<query id="createConnectorMessageTableIndex1">
		CREATE INDEX d_mm${localChannelId}_index1 ON d_mm${localChannelId}(message_id)
	</query>
	
	<query id="createConnectorMessageTableIndex2">
		CREATE INDEX d_mm${localChannelId}_index2 ON d_mm${localChannelId}(message_id, id, status)
	</query>
	
	<query id="createConnectorMessageTableIndex3">
		CREATE INDEX d_mm${localChannelId}_index3 ON d_mm${localChannelId}(message_id, server_id, id)
	</query>
	
	<query id="createMessageContentTable">
		CREATE TABLE d_mc${localChannelId} (
	        metadata_id INTEGER NOT NULL,
	        message_id BIGINT NOT NULL,
	        content_type INTEGER NOT NULL,
	        content NVARCHAR(MAX),
	        is_encrypted BIT NOT NULL,
	        data_type NVARCHAR(255),
	        CONSTRAINT mc${localChannelId}_pkey PRIMARY KEY(message_id, metadata_id, content_type),
	        CONSTRAINT mc${localChannelId}_fkey FOREIGN KEY(message_id, metadata_id) REFERENCES d_mm${localChannelId}(message_id, id) ON DELETE CASCADE
        )
	</query>
	
	<query id="createMessageContentTableIndex1">
		CREATE INDEX d_mc${localChannelId}_index1 ON d_mc${localChannelId}(message_id, metadata_id)
	</query>

	<query id="createMessageCustomMetaDataTable">
		CREATE TABLE d_mcm${localChannelId} (
	        metadata_id INTEGER NOT NULL,
	        message_id BIGINT NOT NULL,
	        CONSTRAINT mcm${localChannelId}_pkey PRIMARY KEY(message_id, metadata_id),
	        CONSTRAINT mcm${localChannelId}_fkey FOREIGN KEY(message_id, metadata_id) REFERENCES d_mm${localChannelId}(message_id, id) ON DELETE CASCADE
        )
	</query>
	
	<query id="createMessageAttachmentTable">
		CREATE TABLE d_ma${localChannelId} (
	        id NVARCHAR(255) NOT NULL,
	        message_id BIGINT NOT NULL,
	        type NVARCHAR(40),
	        segment_id INTEGER NOT NULL,
	        attachment_size INTEGER NOT NULL,
	        content IMAGE,
	        CONSTRAINT ma${localChannelId}_fkey FOREIGN KEY(message_id) REFERENCES d_m${localChannelId}(id) ON DELETE CASCADE
        )
	</query>
	
	<query id="createMessageAttachmentTableIndex1">
		CREATE INDEX d_ma${localChannelId}_index1 ON d_ma${localChannelId}(id)
	</query>
	
	<query id="createMessageAttachmentTableIndex2">
		CREATE INDEX d_ma${localChannelId}_index2 ON d_ma${localChannelId}(message_id)
	</query>
	
	<query id="createMessageStatisticsTable">
		CREATE TABLE d_ms${localChannelId} (
	        metadata_id INTEGER,
	        server_id NVARCHAR(36) NOT NULL,
	        received BIGINT DEFAULT 0 NOT NULL,
	        received_lifetime BIGINT DEFAULT 0 NOT NULL,
	        filtered BIGINT DEFAULT 0 NOT NULL,
	        filtered_lifetime BIGINT DEFAULT 0 NOT NULL,
	        sent BIGINT DEFAULT 0 NOT NULL,
	        sent_lifetime BIGINT DEFAULT 0 NOT NULL,
	        error BIGINT DEFAULT 0 NOT NULL,
	        error_lifetime BIGINT DEFAULT 0 NOT NULL
        )
	</query>
	
	<query id="createMessageStatisticsTableIndex1">
		CREATE INDEX d_ms${localChannelId}_index1 ON d_ms${localChannelId}(metadata_id, server_id)
	</query>
	
	<query id="createMessageSequence">
		INSERT INTO d_message_sequences (local_channel_id) VALUES (${localChannelId})
	</query>
	
	<query id="createChannelsTable">
		CREATE TABLE d_channels (
	        local_channel_id BIGINT NOT NULL,
	        channel_id NVARCHAR(36) NOT NULL,
	        CONSTRAINT d_channels_pkey PRIMARY KEY(local_channel_id),
	        CONSTRAINT unique_channel_id UNIQUE (channel_id)
        )
	</query>
	
	<query id="createSequencesTable">
		CREATE TABLE d_message_sequences (
			local_channel_id BIGINT NOT NULL,
			id BIGINT NOT NULL DEFAULT 1,
			CONSTRAINT d_message_sequences_pkey PRIMARY KEY(local_channel_id)
		)
	</query>
	
	<query id="dropMessageTable">
		DROP TABLE d_m${localChannelId}
	</query>
	
	<query id="dropMessageMetadataTable">
		DROP TABLE d_mm${localChannelId}
	</query>
	
	<query id="dropMessageContentTable">
		DROP TABLE d_mc${localChannelId}
	</query>
	
	<query id="dropCustomMetadataTable">
		DROP TABLE d_mcm${localChannelId}
	</query>
	
	<query id="dropAttachmentsTable">
		DROP TABLE d_ma${localChannelId}
	</query>
	
	<query id="dropStatisticsTable">
		DROP TABLE d_ms${localChannelId}
	</query>
	
	<query id="dropMessageSequence">
		DELETE FROM d_message_sequences WHERE local_channel_id = ${localChannelId}
	</query>
	
	<query id="deleteChannel">
        DELETE FROM d_channels WHERE local_channel_id = ${localChannelId}
	</query>
	
	<query id="getNextMessageId">
		SELECT id
		FROM d_message_sequences
		WHERE local_channel_id = ${localChannelId}
	</query>
	
	<query id="incrementMessageIdSequence">
		UPDATE d_message_sequences
		SET id = id + 1
		WHERE local_channel_id = ${localChannelId}
	</query>
	
	<query id="addMetaDataColumnString">
		ALTER TABLE d_mcm${localChannelId} ADD "${columnName}" NVARCHAR(255)
	</query>
	
	<query id="addMetaDataColumnNumber">
		ALTER TABLE d_mcm${localChannelId} ADD "${columnName}" DECIMAL(31, 15)
	</query>
	
	<query id="addMetaDataColumnBoolean">
		ALTER TABLE d_mcm${localChannelId} ADD "${columnName}" BIT
	</query>
	
	<query id="addMetaDataColumnTimestamp">
		ALTER TABLE d_mcm${localChannelId} ADD "${columnName}" DATETIME
	</query>
	
	<query id="markAsProcessed">
		UPDATE d_m${localChannelId} SET processed = 1
		WHERE id = ?
	</query>
	
	<query id="resetMessage">
		UPDATE d_m${localChannelId} SET processed = 0
		WHERE id = ?
	</query>
	
	<query id="deleteAllMessages">
        DELETE FROM d_m${localChannelId}
	</query>
	
	<query id="deleteAllMessagesCascadeConnectorMessage">
		DELETE FROM d_mm${localChannelId}
	</query>
	
	<query id="deleteAllMessagesCascadeContent">
		TRUNCATE TABLE d_mc${localChannelId}
	</query>
	
	<query id="deleteAllMessagesCascadeMetadata">
		TRUNCATE TABLE d_mcm${localChannelId}
	</query>
	
	<query id="deleteAllMessagesCascadeAttachments">
		TRUNCATE TABLE d_ma${localChannelId}
	</query>
	
	<query id="getConnectorMessagesByMetaDataIdAndStatusWithLimit">
		SELECT a.* FROM (

		SELECT *, ROW_NUMBER() OVER (ORDER BY message_id) AS rownum
		FROM d_mm${localChannelId}
		WHERE id = ? AND status = ? AND server_id = ?

		) AS a WHERE a.rownum <![CDATA[ > ]]> ${offset} AND a.rownum <![CDATA[ <= ]]> (${offset} + ${limit})
	</query>
	
	<query id="getConnectorMessagesByMetaDataIdAndStatusWithLimitAndRange">
		SELECT a.* FROM (
	
		SELECT *, ROW_NUMBER() OVER (ORDER BY message_id) AS rownum
		FROM d_mm${localChannelId}
		WHERE id = ? AND status = ? AND server_id = ?
		AND message_id <![CDATA[ >= ]]> ? AND message_id <![CDATA[ <= ]]> ?
		
		) AS a WHERE a.rownum <![CDATA[ > ]]> ${offset} AND a.rownum <![CDATA[ <= ]]> (${offset} + ${limit})
	</query>
	
	<query id="getUnfinishedMessages">
		SELECT m.*
		FROM d_m${localChannelId} m
		JOIN d_mm${localChannelId} mm ON mm.message_id = m.id AND mm.id = 0
		WHERE m.processed = 0 AND mm.server_id = ?
		ORDER BY m.id
	</query>
	
	<query id="getUnfinishedConnectorMessages">
		SELECT *
		FROM d_mm${localChannelId} mm
		JOIN d_m${localChannelId} m ON m.id = mm.message_id
		JOIN d_mm${localChannelId} mm0 ON mm0.message_id = mm.message_id AND mm0.id = 0
		WHERE m.processed = 0 AND mm0.server_id = ?
		ORDER BY m.id, mm.id
	</query>
	
	<query id="getConnectorMessagesByMessageIdAndMetaDataIds">
		SELECT *
		FROM d_mm${localChannelId}
		WITH (NOLOCK)
		WHERE message_id = ?
		AND id IN (${metaDataIds})
		ORDER BY chain_id ASC, order_id ASC
	</query>
</queries>
